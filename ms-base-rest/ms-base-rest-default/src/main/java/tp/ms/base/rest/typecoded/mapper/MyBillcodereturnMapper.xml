<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tp.ms.base.rest.typecoded.mapper.MyBillcodereturnMapper">
<!-- 
	<cache type="tp.ms.common.data.cache.redis.MsMybatisRedisCache" /> -->

	<resultMap id="BaseResultMap" type="tp.ms.base.rest.typecoded.vo.MyBillcodereturn">
		<result column="pk_billcoderulebase" jdbcType="VARCHAR"
			property="pkBillcoderulebase" />
		<result column="pk_billcodereturn" jdbcType="VARCHAR" property="pkBillcodereturn" />
		<result column="markstr" jdbcType="VARCHAR" property="markstr" />
		<result column="rtsns" jdbcType="VARCHAR" property="rtsns" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		pk_billcoderulebase, pk_billcodereturn, markstr, rtsns
	</sql>
	<select id="selectByExample" parameterType="tp.ms.base.rest.typecoded.vo.MyBillcodereturnExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from my_billcodereturn
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<delete id="deleteByExample" parameterType="tp.ms.base.rest.typecoded.vo.MyBillcodereturnExample">
		delete from my_billcodereturn
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="tp.ms.base.rest.typecoded.vo.MyBillcodereturn">
		insert into my_billcodereturn (pk_billcoderulebase, pk_billcodereturn,
		markstr, rtsns)
		values (#{pkBillcoderulebase,jdbcType=VARCHAR},
		#{pkBillcodereturn,jdbcType=VARCHAR},
		#{markstr,jdbcType=VARCHAR}, #{rtsns,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="tp.ms.base.rest.typecoded.vo.MyBillcodereturn">
		insert into my_billcodereturn
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="pkBillcoderulebase != null">
				pk_billcoderulebase,
			</if>
			<if test="pkBillcodereturn != null">
				pk_billcodereturn,
			</if>
			<if test="markstr != null">
				markstr,
			</if>
			<if test="rtsns != null">
				rtsns,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="pkBillcoderulebase != null">
				#{pkBillcoderulebase,jdbcType=VARCHAR},
			</if>
			<if test="pkBillcodereturn != null">
				#{pkBillcodereturn,jdbcType=VARCHAR},
			</if>
			<if test="markstr != null">
				#{markstr,jdbcType=VARCHAR},
			</if>
			<if test="rtsns != null">
				#{rtsns,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="tp.ms.base.rest.typecoded.vo.MyBillcodereturnExample"
		resultType="java.lang.Long">
		select count(*) from my_billcodereturn
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update my_billcodereturn
		<set>
			<if test="record.pkBillcoderulebase != null">
				pk_billcoderulebase = #{record.pkBillcoderulebase,jdbcType=VARCHAR},
			</if>
			<if test="record.pkBillcodereturn != null">
				pk_billcodereturn = #{record.pkBillcodereturn,jdbcType=VARCHAR},
			</if>
			<if test="record.markstr != null">
				markstr = #{record.markstr,jdbcType=VARCHAR},
			</if>
			<if test="record.rtsns != null">
				rtsns = #{record.rtsns,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update my_billcodereturn
		set pk_billcoderulebase = #{record.pkBillcoderulebase,jdbcType=VARCHAR},
		pk_billcodereturn = #{record.pkBillcodereturn,jdbcType=VARCHAR},
		markstr = #{record.markstr,jdbcType=VARCHAR},
		rtsns = #{record.rtsns,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
</mapper>